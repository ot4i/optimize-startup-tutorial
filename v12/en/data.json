{
    "version": "0.1",
    "pageContent": 
	{
        "_comments": "object that contains data for page labels, buttons, etc.",
        "navItems": 
		{
            "_common": 
			{
                "buttonBackToGallery": 
				{
                    "name": "Back To Gallery",
					"method": "backToGallery()",
					"idName": "backToGallery"	
                },
                "buttonStartTutorial": 
				{
                    "name": "Start Tutorial",
					"method": "startTutorialFromDetailsScreen()",
					"idName": "startTutorial"
                },
				"buttonViewDetails": 
				{
                    "name": "View Details",
					"method": "viewDetails()",
					"idName": "stepsViewDetails"	
                }
            }
        }
    },
    "tutorial": 
	{
        "_common": 
		{
            "name": "Optimizing the startup time of an independent Integration Server",
            "shortDescription": "Learn how to optimize the startup time of an independent integration server using the ibmint command (requires v12.0.4.0 or higher)",
            "durationText": "This tutorial takes approximately",
            "durationTime": "10 minutes",
            "_resourceToOpenComment": "The ID of the first resource to open when the user imports the tutorial. Resource IDs are defined in the repo_metadata.json Tutorials listing on ot4i.",
            "resourceToOpen": "MainFlow",
            "helpLink": 
			{
                "text": "IBM Documentation",
           		"link": "https://www.ibm.com/docs/SSTTDS_12.0/com.ibm.etools.mft.doc/acesw_home.html"
            }
        },
        "pageDetails": 
		{
            "topicsName": "Tutorial topics",
            "_topicListComment": "A short list of product concepts or tasks demonstrated by this tutorial",
            "topicList": 
			[
                {
                    "title": "Command: ibmint optimize server"
                }
            ],
            "outcomesName": "Learning outcomes",
            "_outcomesComment": "A description of what the user will have learned or accomplished by running this tutorial.",
            "outcomeList": 
			[
                {
                    "title": "Speed up the start time for an independent integration server running in a container, by determining functions of the server which are not required using the ibmint optimize command."
                }
            ],

			
			            "summary": 
			{
                "overviewName": "OVERVIEW",
                "_overviewComment": "",
                "sections": 
				[
                    {
                        "section": "This tutorial demonstrates how the ibmint command can be used to optimize the startup time for an independent integration server. The purpose of optimization is to speed up server startup in cloud container environments. The techniques discussed here only apply to independent integration servers and are not suitable for integration servers that are managed by an integration node. Server optimization is suitable when the server content is fixed and it is desireable to reduce the startup time of the process to be as short as possible based upon the server's current settings and content. The tutorial provides a simple example message flow which will be deployed and tested using a local independent integration server, initially created in the Toolkit. The tutorial then switches to a Command Console where the ibmint command will be used to demonstrate the process of optimizing startup. The tutorial deliberately breaks down the optimization task into two separate stages, in order to better identify and explain some of the most frequently used options. The first optimization stage demonstrates how the server itself can decide which components are unnecessary (based upon the server's configuration and deployed content). The second optimization stage goes a step further and demonstrates the impact of switching off the server's use of NodeJS, which causes a further speeding of startup, at the cost of switching off administrative API (and therefore Web UI) access to the server."
					}
                ]
            },			
			"helpLinks": 
			{
				"_helpLinksComment": "Helplinks that have a type:web attribute are rendered as web links. Otherwise, links are assumed to be to embedded Help topics in the Knowledge Center.",
				"title": "Find out more",
				"details": 
				[
					{
						"title": "IBM Documentation link to ",
						"description": "Optimizing the startup time for an independent integration server",
                        "link": "https://www.ibm.com/docs/en/app-connect/12.0?topic=solutions-optimizing-startup-time-independent-integration-server",
						"type": "web"
					}
				]
			}
        },
        "pageSteps": 
		{
            "create": 
			{
                "overview": 
				{
                    "name": "Create",
                    "heading": "Import projects",
                    "_createComment": "A description of what will happen when the user clicks Import.",
                    "sections": 
					[
                        {
                            "section": "When you click Import, one project will be created in your workspace: An application named <span class='application'>ExampleApplication</span>"
                        },
                        {
                            "section": "<span class='application'>ExampleApplication</span> provides a single message flow named <span class='application'>ExampleFlow</span> which is driven by an HTTP input, converts a JSON format message into an XML format message using a Compute node, and then sends the data back to the requesting HTTP client. The main purpose of the tutorial is not focussed around the development or function of the flow, but rather the process of optimizing an independent integration server which has had the message flow deployed."							
                        },
						{ 
                        	"section":"<span class='uicontrol'>HTTP Input</span>: An Input node that receives an input message across HTTP in JSON format."
                        },
                        { 
                        	"section":"<span class='uicontrol'>Compute</span>: A Compute node that converts the JSON data into the XMLNSC domain, and reformats its data to be uppercase."
                        },
						{ 
                        	"section":"<span class='uicontrol'>HTTP Reply</span>: A Reply node that returns the XML message across HTTP."
                        },
                        {
			    			"section": "Once imported using the link on the right, the provided project is ready to be deployed and testedusing the Toolkit's built-in Flow Exerciser. Once tested, the server will be optimized and we will observe the impact on the process startup time."
						}
                    ]
                },
                "helpLinks": 
				{
                    "title": "Find out more",
                    "details": 
					[
                        {
                            "title": "IBM Documentation link to ",
                            "description": "Developing integration solutions from scratch",
                            "link": "https://www.ibm.com/docs/SSTTDS_12.0/com.ibm.etools.mft.doc/bi12002_.htm",
							"type": "web"
                        },
						{
						"title": "IBM Documentation link to ",
						"description": "Optimizing the startup time for an independent integration server",
                        "link": "https://www.ibm.com/docs/en/app-connect/12.0?topic=solutions-optimizing-startup-time-independent-integration-server",
						"type": "web"
						}                        
                    ]
                },
                "actions": 
				{
                    "title": "Create Actions",
                    "details": 
					[
                        {
                            "name": "Import",
                            "method": "importArtifacts()"
                        }
                    ]
                }
            },
            "prepare": 
			{
                "overview": 
				{
                    "name": "Prepare",
                    "heading": "The following steps help you to prepare your environment ready for running the message flow.",
                    "_prepareComment": "A description of what just happened when the user clicked Import, and what will happen when the user clicks Deploy.",
                    "sections": [
				    {
                       "section":"<b>Create an Integration Server</b>",
						  "steps":
                        {
                          "type": "ordered",
                          "details":
                          [
                            {
                                "details": "From the Integration Explorer view in the bottom left corner of the Toolkit, right-click the Integration Servers folder and select the option to <span class='uicontrol'>Create a local integration server</span>. Leave all the options with their default values."
                            },
							{
                            "details": "<b>It is important to select the default options for this wizard</b>, because we will be comparing the start-up times with these default options to the optimized server configuration later in the tutorial.Click Finish on the dialog and the local Integration Server will be started, using a project in your Toolkit's workspace as the work directory. Click OK to dismiss the Success dialog."
                    		},
							{
                            "details": "Right-click the integration server you just created (named TEST_SERVER) and choose the option to <code>Open Console Log</code>. The console will show several messages for the starting of the server, similar to the following output:<br><code>2022-03-29 09:55:56.064716: BIP1990I: Integration server 'TEST_SERVER' starting initialization; version '12.0.4.0' (64-bit)<br>2022-03-29 09:55:56.091108: BIP9905I: Initializing resource managers. <br>Listening for transport dt_socket at address: 9997<br>2022-03-29 09:56:02.801710: BIP9906I: Reading deployed resources. <br>2022-03-29 09:56:03.641175: BIP2866I: IBM App Connect Enterprise administration security is inactive. <br>2022-03-29 09:56:03.655721: BIP3132I: The HTTP Listener has started listening on port '7600' for 'RestAdmin http' connections. <br>2022-03-29 09:56:03.661341: BIP1991I: Integration server has finished initialization.<br><br></code><br><br>In this example, on the particular machine this was captured from, note that the integration server started up relatively slowly, in approximately 7.5 seconds. Of course, precise timings may vary dependent on the speed of your hardware. This startup time will reduce significantly when we optimize the server later in the tutorial."
                    		},
							{
                            "details": "Next you will use the Flow exerciser to send HTTP requests to the message flow."
                    		}		
						  ]
						}
					}
             ]
                },
                "helpLinks": 
				{
                }
            },
            "run": 
			{
                "overview": 
				{
                    "name": "Run",
                    "heading": "",
                    "_runComment": "The full steps for the user to run through the tutorial. Use 'sections' to render paragraphs, 'steps' with a type of 'ordered' or 'unordered' to render HTML lists, and 'substeps' to render nested lists.",
                "sections":[                            
                            {
                                "section": "<h4>Use the Flow Exerciser to test the message flow",
                                "steps": {
                                    "type": "ordered",
                                    "details": [                                      
                                    {
                                        "details": "Open <span class='resource'>ExampleFlow.msgflow</span> and click the Flow Exerciser icon <img src='http://ot4i.github.io/ot4i.tutorials//dist/images/icons/iib/startFlowExerciser.png' alt='' /> to start testing the flow."
                                        },
										{
                                            "details": "Click the Send Message icon <img src='http://ot4i.github.io/ot4i.tutorials/dist/images/icons/iib/sendMessage.png' alt='' />. One saved message is provided, named InputJSON, which can be used to invoke the HTTP Input node..."
                                        },																				
                                        {
                                            "details": "The input message <span class='resource'>Input1</span> contains this data:<br><code>{<br>&nbsp;&nbsp;&nbsp;&nbsp;\"message\": \"hello world\"<br>}</code><br><br>Select this input message and click Send and your message is sent to the HTTPInput node. You will receive an XML reply message structured like this:<br><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;Message&gt;HELLO WORLD&lt;Message&gt;<br></code><br>After you close the dialog, the path taken through the message flow will be highlighted."
											},
										{										
										  "details": "Now we have tested the message flow, we will optimize the server startup to match the content of the configured integration server. Before progressing to the next set of instructions, please STOP your integration server from the Toolkit. Click the Return Flow to Edit mode button, and then righ-click TEST_SERVER and select Stop. The next stages involve interacting with the integration server's work directory and ensuring the server is stopped will avoid any of the files being locked by another process."
										}									
                                        ]
                                    }
                            },
							{
                                "section": "<h4>Open a Command Console",
                                "steps": {
                                    "type": "ordered",
                                    "details": [  
										 {
										"details":"Open an IBM App Connect Enterprise command console and execute the following command, using the file system location of your Toolkit workspace in place of &lt;Your Toolkit Workspace Location&gt;<br><code>ibmint optimize server --work-directory &lt;Your Toolkit Workspace Location&gt;\\TEST_SERVER --verbose</code><br><br>The response should look like this:<br><br><code>BIP15243I: Analyzing server configuration.<br>BIP15257I: The component 'NodeJS' is required for YAML configuration setting 'RestAdminListener/port' with value '7600'.<br>BIP15244I: Analyzing application 'ExampleApplication'.<br>BIP15250I: Analyzing message flow 'ExampleFlow'.<br>BIP15251I: Analyzing message flow node 'HTTP Input'.<br>BIP15251I: Analyzing message flow node 'HTTP Reply'.<br>BIP15251I: Analyzing message flow node 'Compute'.<br>BIP15254I: The component 'Nodes/ESQL' is required for message flow node 'Compute' of type 'ComIbmCompute'.<br>BIP15255I: The component 'Nodes/ESQL' is required for deployed resource 'ExampleFlow_Compute.esql'.<br>BIP15237I: The components file '&lt;Your Toolkit Workspace Location&gt;\\TEST_SERVER\\server.components.yaml' was created. It may be further edited if required.<br>BIP8071I: Successful command completion.</code><br>"
										 },
										 {
										 	"details":"The optimization process generates a configuration file named <code>server.components.yaml</code> <b>(not to be confused with server.conf.yaml!)</b> which is written to the root of the server's working directory. Locate this file and explore its contents. For reference, it should look like this:<br><code>---<br>optimizeComponents: 40<br>optimizeVersion: '12.0.4.0'<br>reportExcludedComponents: true<br>serverComponentsVersion: 1<br>CLR: false<br>Deploy: false<br>JVM: false<br>NodeJS: true<br>Nodes: <br>&nbsp;&nbsp;.NET: false<br>&nbsp;&nbsp;Aggregation: false<br>&nbsp;&nbsp;Basic: false<br>&nbsp;&nbsp;CallableFlow: false<br>&nbsp;&nbsp;Connector: false<br>&nbsp;&nbsp;ESQL: true<br>&nbsp;&nbsp;Group: false<br>&nbsp;&nbsp;JMSTransform: false<br>&nbsp;&nbsp;MQ: false<br>&nbsp;&nbsp;REST: false<br>&nbsp;&nbsp;SecurityPEP: false<br>&nbsp;&nbsp;Timer: false<br>JavaNodes: <br>&nbsp;&nbsp;Adapters: false<br>&nbsp;&nbsp;CICS: false<br>&nbsp;&nbsp;CORBA: false<br>&nbsp;&nbsp;Collection: false<br>&nbsp;&nbsp;Email: false<br>&nbsp;&nbsp;File: false<br>&nbsp;&nbsp;IMS: false<br>&nbsp;&nbsp;JDBC: false<br>&nbsp;&nbsp;JMS: false<br>&nbsp;&nbsp;JavaCompute: false<br>&nbsp;&nbsp;Kafka: false<br>&nbsp;&nbsp;MQTT: false<br>&nbsp;&nbsp;Mapping: false<br>&nbsp;&nbsp;ODM: false<br>&nbsp;&nbsp;TCPIP: false<br>&nbsp;&nbsp;WSRR: false<br>&nbsp;&nbsp;XSLT: false<br>JavaScriptNodes: <br>&nbsp;&nbsp;LoopBack: false<br>&nbsp;&nbsp;Salesforce: false<br>ResourceManagers: <br>&nbsp;&nbsp;FTE: false<br>&nbsp;&nbsp;GlobalCache: false<br>FlowSecurityProviders: <br>&nbsp;&nbsp;LDAP: false<br>&nbsp;&nbsp;TFIM: false<br>&nbsp;&nbsp;WS-Trust: false</code><br>As you can see, in this particular example there are many parts of the integration server which do not need to be started, hence many entries with the value false in the list! In real-life scenarios, the greater the diversity of artifacts which you have deployed to an integration server, the larger the number of its capabilities which will need to be left switched on.  In particular, note that the list above has top level settings which apply to the <code>CLR</code>, <code>Deploy</code>, <code>JVM</code> and <code>NodeJS</code>. Each of these capabilities has been switched off apart from NodeJS. NodeJS is required in order to support the integration server's administrative web UI. We will discuss this further in the second optimization stage."
										 },										
										{
                                            "details": "We will now observe the impact of optimization. Staying in the Command console session, start up the integration server using the following command:<br><code>IntegrationServer --work-directory &lt;Your Toolkit Workspace Location&gt;\\TEST_SERVER</code><br><br>The output of the command will look like this:<br><code>2022-03-28 15:17:16.387726: The components file 'server.components.yaml' is being loaded from the workpath '&lt;Your Toolkit Workspace Location&gt;\\TEST_SERVER'.<br>2022-03-28 15:17:16.503410: BIP1990I: Integration server 'TEST_SERVER' starting initialization; version '12.0.4.0' (64-bit)<br>2022-03-28 15:17:16.535048: BIP9905I: Initializing resource managers.<br>2022-03-28 15:17:16.538193: BIP9397I: The runtime component 'JVM' has not been created.<br>2022-03-28 15:17:16.707109: BIP9397I: The runtime component 'GlobalCache' has not been created.<br>2022-03-28 15:17:16.715311: BIP9397I: The runtime component '.NET CLR' has not been created.<br>2022-03-28 15:17:16.740501: BIP9398I: The resources from 'imbcallableflow.lil' have not been loaded.<br>2022-03-28 15:17:16.748163: BIP9398I: The resources from 'imbdfagg.lil' have not been loaded.<br>2022-03-28 15:17:16.752472: BIP9398I: The resources from 'imbdfbas.lil' have not been loaded.<br>2022-03-28 15:17:16.756865: BIP9398I: The resources from 'imbdfcon.lil' have not been loaded.<br>2022-03-28 15:17:16.828112: BIP9398I: The resources from 'imbdfdotnet.lil' have not been loaded.<br>2022-03-28 15:17:16.834870: BIP9398I: The resources from 'imbdfjmt.lil' have not been loaded.<br>2022-03-28 15:17:16.842722: BIP9398I: The resources from 'imbdfmqm.lil' have not been loaded.<br>2022-03-28 15:17:16.849632: BIP9398I: The resources from 'imbdftcpip.lil' have not been loaded.<br>2022-03-28 15:17:16.863560: BIP9398I: The resources from 'imbfte.lil' have not been loaded.<br>2022-03-28 15:17:16.876128: BIP9398I: The resources from 'imbgroupnodes.lil' have not been loaded.<br>2022-03-28 15:17:16.930120: BIP9398I: The resources from 'imbpep.lil' have not been loaded.<br>2022-03-28 15:17:16.935818: BIP9398I: The resources from 'imbrestlil.lil' have not been loaded.<br>2022-03-28 15:17:16.944274: BIP9398I: The resources from 'imbtimer.lil' have not been loaded.<br>2022-03-28 15:17:16.954804: BIP9397I: The runtime component 'Salesforce' has not been created.<br>2022-03-28 15:17:16.963460: BIP9397I: The runtime component 'Loopback' has not been created.<br>2022-03-28 15:17:16.967450: BIP9397I: The runtime component 'MQTT' has not been created.<br>2022-03-28 15:17:16.982356: BIP9397I: The runtime component 'KAFKA' has not been created.<br>2022-03-28 15:17:16.999242: BIP9397I: The runtime component 'CICS XA' has not been created.<br>2022-03-28 15:17:17.013116: BIP9398I: The resources from 'ldapSecurityProvider.lsl' have not been loaded.<br>2022-03-28 15:17:17.025392: BIP9398I: The resources from 'tfimSecurityProvider.lsl' have not been loaded.<br>2022-03-28 15:17:17.029930: BIP9398I: The resources from 'wstrustSecurityProvider.lsl' have not been loaded.<br>2022-03-28 15:17:17.606684: BIP9906I: Reading deployed resources.<br>2022-03-28 15:17:17.619090: BIP9907I: Initializing deployed resources.<br>2022-03-28 15:17:17.625452: BIP2155I: About to 'Initialize' the deployed resource 'ExampleApplication' of type 'Application'.<br>2022-03-28 15:17:17.638108: BIP2155I: About to 'Start' the deployed resource 'ExampleApplication' of type 'Application'.<br>An http endpoint was registered on port '7800', path '/ExampleFlow'.<br>2022-03-28 15:17:17.745996: BIP3132I: The HTTP Listener has started listening on port '7800' for 'http' connections.<br>2022-03-28 15:17:17.750722: BIP1996I: Listening on HTTP URL '/ExampleFlow'.<br>Started native listener for HTTP input node on port 7800 for URL /ExampleFlow<br>2022-03-28 15:17:17.764856: BIP2269I: Deployed resource 'ExampleFlow' (uuid='ExampleFlow',type='MessageFlow') started successfully.<br>2022-03-28 15:17:18.711392: BIP2866I: IBM App Connect Enterprise administration security is inactive.<br>2022-03-28 15:17:18.735096: BIP3132I: The HTTP Listener has started listening on port '7600' for 'RestAdmin http' connections.<br>2022-03-28 15:17:18.744878: BIP1991I: Integration server has finished initialization.<br></code><br><br><b>In this example, note that the integration server started up significantly quicker than normal, in less than 2.5 seconds!</b>Of course, precise timings may vary dependent on the speed of your hardware and the degree to which your deployments can be optimized."
                                        },
										{
                                            "details": "Now, stop the server. For example on Windows platforms, you can do this using the Ctrl-C key combination in your Command Console session. Open the <code>server.components.yaml</code> file in the root of your integration server's work directory (&lt;Your Toolkit Workspace Location&gt;\\TEST_SERVER) with a text editor and change the setting to now also turn off NodeJS. You can do this by changing the property <code>NodeJS: true</code> to become <code>NodeJS: false</code>. Resave the <code>server.components.yaml</code> file."
										},
										{
                                            "details": "We will now observe the impact of this second stage of optimization. Staying in the Command console session, start up the integration server using the following command:<br><code>IntegrationServer --work-directory &lt;Your Toolkit Workspace Location&gt;\\TEST_SERVER</code><br><br>The output of the command will look like this:<br><code>2022-03-28 15:30:22.281892: The components file 'server.components.yaml' is being loaded from the workpath '&lt;Your Toolkit Workspace Location&gt;\\TEST_SERVER'.<br>2022-03-28 15:30:22.394812: BIP1990I: Integration server 'TEST_SERVER' starting initialization; version '12.0.4.0' (64-bit)<br>2022-03-28 15:30:22.427674: BIP9905I: Initializing resource managers.<br>2022-03-28 15:30:22.432956: BIP9397I: The runtime component 'JVM' has not been created.<br>2022-03-28 15:30:22.438894: BIP9397I: The runtime component 'NodeJS' has not been created.<br>2022-03-28 15:30:22.616908: BIP9397I: The runtime component 'GlobalCache' has not been created.<br>2022-03-28 15:30:22.622128: BIP9397I: The runtime component '.NET CLR' has not been created.<br>2022-03-28 15:30:22.645140: BIP9398I: The resources from 'imbcallableflow.lil' have not been loaded.<br>2022-03-28 15:30:22.649840: BIP9398I: The resources from 'imbdfagg.lil' have not been loaded.<br>2022-03-28 15:30:22.654376: BIP9398I: The resources from 'imbdfbas.lil' have not been loaded.<br>2022-03-28 15:30:22.668790: BIP9398I: The resources from 'imbdfcon.lil' have not been loaded.<br>2022-03-28 15:30:22.737942: BIP9398I: The resources from 'imbdfdotnet.lil' have not been loaded.<br>2022-03-28 15:30:22.743498: BIP9398I: The resources from 'imbdfjmt.lil' have not been loaded.<br>2022-03-28 15:30:22.753254: BIP9398I: The resources from 'imbdfmqm.lil' have not been loaded.<br>2022-03-28 15:30:22.770536: BIP9398I: The resources from 'imbdftcpip.lil' have not been loaded.<br>2022-03-28 15:30:22.778526: BIP9398I: The resources from 'imbfte.lil' have not been loaded.<br>2022-03-28 15:30:22.786524: BIP9398I: The resources from 'imbgroupnodes.lil' have not been loaded.<br>2022-03-28 15:30:22.821906: BIP9398I: The resources from 'imbpep.lil' have not been loaded.<br>2022-03-28 15:30:22.829522: BIP9398I: The resources from 'imbrestlil.lil' have not been loaded.<br>2022-03-28 15:30:22.840446: BIP9398I: The resources from 'imbtimer.lil' have not been loaded.<br>2022-03-28 15:30:22.854860: BIP9397I: The runtime component 'MQTT' has not been created.<br>2022-03-28 15:30:22.868124: BIP9397I: The runtime component 'KAFKA' has not been created.<br>2022-03-28 15:30:22.874736: BIP9397I: The runtime component 'CICS XA' has not been created.<br>2022-03-28 15:30:22.886930: BIP9398I: The resources from 'ldapSecurityProvider.lsl' have not been loaded.<br>2022-03-28 15:30:22.895040: BIP9398I: The resources from 'tfimSecurityProvider.lsl' have not been loaded.<br>2022-03-28 15:30:22.905736: BIP9398I: The resources from 'wstrustSecurityProvider.lsl' have not been loaded.<br>2022-03-28 15:30:22.920132: BIP9906I: Reading deployed resources.<br>2022-03-28 15:30:22.935340: BIP9907I: Initializing deployed resources.<br>2022-03-28 15:30:22.942242: BIP2155I: About to 'Initialize' the deployed resource 'ExampleApplication' of type 'Application'.<br>2022-03-28 15:30:22.958816: BIP2155I: About to 'Start' the deployed resource 'ExampleApplication' of type 'Application'.<br>An http endpoint was registered on port '7800', path '/ExampleFlow'.<br>2022-03-28 15:30:23.048384: BIP3132I: The HTTP Listener has started listening on port '7800' for 'http' connections.<br>2022-03-28 15:30:23.053708: BIP1996I: Listening on HTTP URL '/ExampleFlow'.<br>Started native listener for HTTP input node on port 7800 for URL /ExampleFlow<br>2022-03-28 15:30:23.068254: BIP2269I: Deployed resource 'ExampleFlow' (uuid='ExampleFlow',type='MessageFlow') started successfully.<br>2022-03-28 15:30:23.085772: BIP1991I: Integration server has finished initialization.<br></code>You should observe that the integration server start time has now reduced even further. <b>In this example, note that the integration server started up in less than a second!</b> Again, of course precise timings may vary dependent on the speed of your hardware and the degree to which your deployments can be optimized."
										}										
                                        ]
                                    }
                            },
							{
                                "section": "<h4>Optional: Return to the Toolkit",
                                "steps": {
                                    "type": "ordered",
                                    "details": [                                      
                                    	{
                                        "details": "Right-click the TEST_SERVER integration server from the Integration Explorer view (by default located in the bottom left corner of the Toolkit) and start the server. Attempt to drag and drop deploy the same application with which we have been testing (or any other BAR file which you have handy!) and you will be met with this exception message:<br><br><code>BIP2377E Integration server 'TEST_SERVER' has been optimized. It is not possible to deploy to an integration server that has been optimized.</code>.<br><br>This behaviour is implemented for the user's own protection, because optimizations which have been applied to a server are sensitive to the deployed content. This is not typically a problem for independent integration servers in containers because in situations where you wish to deploy something new, the container should be torn down and replaced with the new configuration. We deliberately highlight this behaviour here, just so that users bear it in mind if experimenting with this new capability!"
                                        },
										{
                                            "details": "Also in the Toolkit, right-click the TEST_SERVER integration server from the Integration Explorer view and choose the option to <code>Start Web User Interface</code>. Your browser will attempt to open a view on the integration server but the port will not be opened so the browser will report that it is unable to connect."
                                        }
										
                                        ]
                                    }
                            }
                    ]
                },
				
                "helpLinks": 
				{
                    "title": "Find out more",
                    "details": 
					[
                        {
						"title": "IBM Documentation link to ",
						"description": "Optimizing the startup time for an independent integration server",
                        "link": "https://www.ibm.com/docs/en/app-connect/12.0?topic=solutions-optimizing-startup-time-independent-integration-server",
						"type": "web"
						},
                        {
                            "title": "IBM Documentation link to ",
                            "description": "Testing your message flow by using the Flow exerciser",
                            "link": "https://www.ibm.com/docs/SSTTDS_12.0/com.ibm.etools.mft.doc/rt26110_.htm",
							"type": "web"
                        }
                    ]
                }
            }
        }
    }
}
